// The following credentials must be set up in Jenkins, 
// at instance or at folder level:
// - npm-registry-url (string, ex: '//registry.npmjs.org/')
// - git-host (string)
// - jenkins-service-account ('Username with password')
// - npm-auth-token (string)
// - git-url (string)

pipeline {
    agent { label 'node' }
    options {
        timeout(activity: true, time: 1, unit: 'HOURS')
        timestamps()
    }
    parameters {
        string (
            name: 'tag',
            defaultValue: 'master',
            description: 'specify git tag that should be cloned and which packages should be published. ex: refs/tags/v0.0.9'
        )
    }
    stages {
        stage('install') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'git-url', variable: 'GIT_URL')
                    ]) {
                        checkout([
                            $class: 'GitSCM',
                            branches: [
                                [name: params.tag]
                            ],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [],
                            userRemoteConfigs: [[
                                credentialsId: 'jenkins-service-account',
                                url: GIT_URL
                            ]]
                        ])
                        sh 'npm ci'
                        sh 'npm run bootstrap'
                    }
                }
            }
        }
        stage('build') {
            steps {
                sh 'npm run build'
            }
        }
        stage('publish') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'npm-registry-url', variable: 'NPM_REGISTRY_URL'),
                        string(credentialsId: 'npm-auth-token', variable: 'NPM_AUTH_TOKEN')
                    ]) {
                        def NPM_REGISTRY_URL_WITH_PROTOCOL = withHttpsProtocol(NPM_REGISTRY_URL)
                        sh "echo $NPM_REGISTRY_URL:_authToken=$NPM_AUTH_TOKEN > ~/.npmrc"
                    }
                    sh "npm run lerna -- publish from-package --yes --registry $NPM_REGISTRY_URL_WITH_PROTOCOL"
                }
            }
        }
    }
}

String withHttpsProtocol(String url) {
    return "https:" + url
}